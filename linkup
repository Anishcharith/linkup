#!/usr/bin/python3

import webbrowser
import sys
from pathlib import Path
import json
import os.path
from os import listdir



def helpme():
    print("-h\t\t\t\t: This help text.")
    print("-a [topic] [subtopic] [links]\t: Add links")
    print("-l [topic] [subtopic]\t\t: Load links in subtopic")
    print("-la [topic]\t\t\t: Load all links in topic")
    print("-s [topic]\t\t\t: Show subtopics and link counts in subtopic")
    print("-sa \t\t\t\t: Show all topics with subtopics and link counts in subtopic")

def addlink(base_file):
    links = argv[4:]
    # use functions in Path, replace %s stuff with base_file once Path is integrated
    if not os.path.isfile(base_file):
        # topic doesn't exist , create a topic file
        with open(base_file, mode='w', encoding='utf-8') as f:
            obj = {}
            json.dump(obj,f)

    with open(base_file, mode='r', encoding='utf-8') as f:
        entries = json.load(f)
        
    if subtopic not in entries:
        entries[subtopic] = links
    else:
        entries[subtopic] += links

    with open(base_file, mode='w', encoding='utf-8') as f:
        json.dump(entries,f,indent=2)

def openlinks(base_file):
    with open(base_file, mode='r', encoding='utf-8') as f:
        entries = json.load(f)
    for link in entries[subtopic]:
        webbrowser.open(link)

def openall(base_file):
    with open(base_file, mode='r', encoding='utf-8') as f:
        entries = json.load(f)
    for subtopic in entries.keys():
        for link in entries[subtopic]:
            webbrowser.open(link)

def showlinks(base_file):
    with open(base_file, mode='r', encoding='utf-8') as f:
        entries = json.load(f)
    print(base_file)
    for key in entries.keys():
        print("\t{:12} : {} links".format(key,len(entries[key])))

def showall():
    files = listdir(basedir)
    for file in files:
        showlinks(basedir+file)

basedir = ".json/"


if not os.path.exists(basedir):
    os.makedirs(basedir)

argv = sys.argv
argc = len(argv)

# Error handling for lack of options

option = argv[1]

if option == '--help' or option == '-h':
    helpme()
    sys.exit(0)

if option == '--showall' or option == '-sa':
    showall()
    sys.exit(0)

# set home directory  using Path
home = None 
topic = argv[2]
base_file = basedir + topic + ".json"

try:
    subtopic = argv[3]
except:
    subtopic = None









if(option=='--add' or option=='-a'):
    addlink(base_file)


elif(option == '--load' or option == '-l'):
    if subtopic == None:
        openall(base_file)
    else:
        openlinks(base_file)

elif(option == '--loadall' or option == '-la'):
    openall(base_file)

elif(option == '--show' or option == '-s'):
    showlinks(base_file)